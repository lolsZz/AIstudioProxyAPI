[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aistudio-proxy-api"
version = "0.6.0"
description = "A proxy server for Google AI Studio with OpenAI-compatible API"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "AIstudio Proxy API Team"}
]
keywords = ["ai", "proxy", "google", "ai-studio", "openai", "api", "gemini"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "fastapi==0.104.1",
    "pydantic>=2.8.0",
    "uvicorn==0.23.2",
    "python-dotenv==1.0.0",
    "websockets==11.0.3",
    "httptools",
    "uvloop; sys_platform != 'win32'",
    "playwright",
    "camoufox[geoip]",
    "cryptography",
    "aiohttp~=3.11.18",
    "requests==2.31.0",
    "pyjwt==2.8.0",
    "Flask",
    "aiosocks~=0.2.6",
    "python-socks~=2.7.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/lolsZz/AIstudioProxyAPI"
Repository = "https://github.com/lolsZz/AIstudioProxyAPI"
Documentation = "https://github.com/lolsZz/AIstudioProxyAPI/blob/main/README.md"
Issues = "https://github.com/lolsZz/AIstudioProxyAPI/issues"

[project.scripts]
aistudio-proxy = "aistudio_proxy.main:main"
aistudio-proxy-gui = "scripts.gui_launcher:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["aistudio_proxy*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
"aistudio_proxy" = ["py.typed"]
"static" = ["**/*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["aistudio_proxy"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "camoufox.*",
    "playwright.*",
    "uvicorn.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["aistudio_proxy"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
